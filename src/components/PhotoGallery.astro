---
export interface Photo {
  id: string;
  src: string;
  srcWebP?: string;
  thumbnail: string;
  alt: string;
  camera: string;
  lens: string;
  settings: {
    aperture: string;
    shutter: string;
    iso: number;
    focalLength?: string;
  };
  filmSimulation?: string;
  date: string;
  tags: string[];
}

interface Props {
  photos: Photo[];
  columns?: number;
}

const { photos, columns = 3 } = Astro.props;
---

<div class={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-${columns} gap-6`}>
  {photos.map((photo) => (
    <article class="group relative overflow-hidden rounded-lg bg-gray-900 aspect-[4/3] cursor-pointer">
      
      <picture>
        {photo.srcWebP && (
          <source srcSet={import.meta.env.BASE_URL + photo.srcWebP} type="image/webp" />
        )}
        <img
          src={import.meta.env.BASE_URL + photo.src}
          alt={photo.alt}
          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
          loading="lazy"
        />
      </picture>
      
      <!-- EXIF Overlay -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
        <div class="absolute bottom-0 left-0 right-0 p-4 text-white">
          <h3 class="font-semibold text-lg mb-2">{photo.alt}</h3>
          
          <div class="grid grid-cols-2 gap-2 text-sm font-mono text-gray-300 mb-2">
            <div>üì∑ {photo.camera}</div>
            <div>üîç {photo.lens}</div>
            <div>‚öôÔ∏è {photo.settings.aperture}</div>
            <div>‚è±Ô∏è {photo.settings.shutter}</div>
            <div>üìä ISO {photo.settings.iso}</div>
            {photo.settings.focalLength && <div>üìè {photo.settings.focalLength}</div>}
          </div>
          
          {photo.filmSimulation && (
            <div class="text-xs text-orange-300 mb-2">üé® {photo.filmSimulation}</div>
          )}
          
          <div class="flex justify-between text-xs text-gray-400">
            <span>{new Date(photo.date).toLocaleDateString('ja-JP')}</span>
            {photo.tags.length > 0 && (
              <span>#{photo.tags[0]}</span>
            )}
          </div>
        </div>
      </div>
    </article>
  ))}
</div>